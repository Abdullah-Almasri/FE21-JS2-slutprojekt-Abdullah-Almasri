{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,0BAIO,MAAMC,EACXC,YACkBC,EACAC,EACAC,G,QAFAF,E,cACAC,E,aACAC,EAEhBC,KAAKC,YACP,CACQA,aACN,MAAMC,EAAaC,SAASC,eAAe,iBACrCC,EAAeF,SAASG,cAAc,OAC5CJ,EAAWK,OAAOF,GAClBA,EAAaG,UAAUC,IAAIT,KAAKH,GAAI,gBAEpC,MAAMa,EAAkBP,SAASG,cAAc,KAC/CI,EAAgBF,UAAUC,IAAI,cAC9BC,EAAgBC,UAAY,GAAGX,KAAKF,oBAAoBE,KAAKD,UAC7DM,EAAaE,OAAOG,GAEpB,MAAME,EAAYT,SAASG,cAAc,UACzCM,EAAUJ,UAAUC,IAAI,eACxBG,EAAUD,UAAY,IAClBX,KAAKF,UAAYe,eAAeC,QAAQ,SAC1CT,EAAaE,OAAOK,GAGtBA,EAAUG,iBAAiB,SAAS,KAElC,GADiBF,eAAeC,QAAQ,SACxBD,eAAeC,QAAQ,QAAS,CAC9C,MAAME,GAAS,EAAAvB,EAAAwB,KAAIC,EAAAC,GAAI,iBAAmBnB,KAAKH,KAC/C,EAAAJ,EAAA2B,QAAOJ,EACT,IAEJ,CACOK,WACLlB,SAASmB,cAAc,IAAItB,KAAKH,MAAMuB,QACxC,EAEF,MAAMG,GAAQ,EAAA9B,EAAAwB,KAAIC,EAAAC,GAAI,kBACtB,IAAIK,EAAuB,IAC3B,EAAA/B,EAAAgC,SAAQF,GAAQG,IACd,MAAMC,EAAcD,EAASE,MAC7B,IAAK,MAAM7B,KAAWyB,EACpBzB,EAAQsB,WAEVG,EAAW,GACX,IAAK,MAAMK,KAAOF,EAChBH,EAASM,KACP,IAAInC,EACFkC,EACAF,EAAYE,GAAKE,KACjBJ,EAAYE,GAAK9B,WAyCzB,WACE,MAAMiC,EAAI7B,SAASC,eAAe,iBAClC4B,EAAEC,UAAYD,EAAEE,YAClB,CAxCEC,GAWIR,GAVJ,WACE,MAAMS,EAAeC,OAAOC,OAAOX,GAC7BY,EAASF,OAAOG,KAAKb,GAAa,GACxC,IAAK,IAAIc,EAAI,EAAGA,EAAIL,EAAaM,OAAQD,IACvC,GAAIL,EAAaM,OAAS,GAAI,CAC5B,MAAMC,GAAO,EAAAlD,EAAAwB,KAAIC,EAAAC,GAAI,iBAAmBoB,IACxC,EAAA9C,EAAA2B,QAAOuB,EACT,CAEJ,CAEEC,EAAA,IAGkC,MAAlC/B,eAAeC,QAAQ,QACzBX,SAASC,eAAe,QAAQyC,MAAMC,WAAa,UAInD3C,SAASC,eAAe,QAAQyC,MAAMC,WAAa,UACnD3C,SAASC,eAAe,QAAQW,iBAAiB,SAAUiB,IACzDA,EAAEe,iBACF,MAAMhD,EAAUI,SAASC,eAAe,eAElC4C,EAAe,CACnBjB,KAAMlB,eAAeC,QAAQ,QAC7Bf,QAASA,EAAQkD,OAIbC,EAAa,CAAC,EACpBA,GAFuB,EAAAzD,EAAAqC,MAAKP,GAAOM,KAEdmB,GACrB,EAAAvD,EAAA0D,QAAO5B,EAAO2B,EAAA,MAQlB,EAAAE,EAAAC","sources":["src/modules/messagesShows.ts"],"sourcesContent":["import { get, ref, remove, update, onValue, push } from \"firebase/database\";\nimport { db } from \"./firebaseApp\";\nimport { logOut } from \"./logout\";\n\nexport class Messages {\n  constructor(\n    public readonly id: string,\n    public readonly userName: string,\n    public readonly message: string,\n  ) {\n    this.displayMsg();\n  }\n  private displayMsg(): void {\n    const msgWrapper = document.getElementById(\"messagesShows\");\n    const msgContainer = document.createElement(\"div\") as HTMLDivElement;\n    msgWrapper.append(msgContainer);\n    msgContainer.classList.add(this.id, \"chat-styling\");\n\n    const userNameElement = document.createElement(\"p\") as HTMLHeadElement;\n    userNameElement.classList.add(\"posted-msg\");\n    userNameElement.innerText = `${this.userName} posted: ${this.message}`;\n    msgContainer.append(userNameElement);\n\n    const removeBtn = document.createElement(\"button\") as HTMLButtonElement;\n    removeBtn.classList.add(\"remove-post\");\n    removeBtn.innerText = \"X\";\n    if (this.userName == sessionStorage.getItem(\"user\")) {\n      msgContainer.append(removeBtn);\n    }\n\n    removeBtn.addEventListener(\"click\", () => {\n      const userName = sessionStorage.getItem(\"user\");\n      if (userName == sessionStorage.getItem(\"user\")) {\n        const msgRef = ref(db, \"/Topics/Shows/\" + this.id);\n        remove(msgRef);\n      }\n    });\n  }\n  public clearDOM(): void {\n    document.querySelector(`.${this.id}`).remove();\n  }\n}\nconst dbRef = ref(db, \"/Topics/Shows/\");\nlet messages: Messages[] = [];\nonValue(dbRef, (snapshot) => {\n  const messageData = snapshot.val();\n  for (const message of messages) {\n    message.clearDOM();\n  }\n  messages = [];\n  for (const key in messageData) {\n    messages.push(\n      new Messages(\n        key,\n        messageData[key].name,\n        messageData[key].message,\n      )\n    );\n  }\n  scrollDown();\n  function postLimiter(): void {\n    const messageArray = Object.values(messageData);\n    const index0 = Object.keys(messageData)[0];\n    for (let i = 0; i < messageArray.length; i++) {\n      if (messageArray.length > 25) {\n        const post = ref(db, \"/Topics/Shows/\" + index0);\n        remove(post);\n      }\n    }\n  }\n  if (messageData) {\n    postLimiter();\n  }\n});\nif (sessionStorage.getItem(\"user\") == null || undefined || \"\") {\n  document.getElementById(\"send\").style.visibility = \"hidden\";\n}\n\nelse {\n  document.getElementById(\"send\").style.visibility = \"visible\";\n  document.getElementById(\"send\").addEventListener(\"click\", (e) => {\n    e.preventDefault();\n    const message = document.getElementById(\"userMessage\") as HTMLInputElement;\n\n    const messageToAdd = {\n      name: sessionStorage.getItem(\"user\"),\n      message: message.value\n    };\n\n    const newKey: string = push(dbRef).key;\n    const newMessage = {};\n    newMessage[newKey] = messageToAdd;\n    update(dbRef, newMessage);\n  });\n}\n\nfunction scrollDown(): void {\n  const e = document.getElementById(\"messagesShows\");\n  e.scrollTop = e.scrollHeight;\n}\nlogOut();"],"names":["$7WTbd","parcelRequire","$9779425a71e8e160$export$ceaacf8b390a3600","constructor","id","userName","message","this","displayMsg","msgWrapper","document","getElementById","msgContainer","createElement","append","classList","add","userNameElement","innerText","removeBtn","sessionStorage","getItem","addEventListener","msgRef","ref","$dNF4M","db","remove","clearDOM","querySelector","$9779425a71e8e160$var$dbRef","$9779425a71e8e160$var$messages","onValue","snapshot","messageData","val","key","push","name","e","scrollTop","scrollHeight","$9779425a71e8e160$var$scrollDown","messageArray","Object","values","index0","keys","i","length","post","postLimiter","style","visibility","preventDefault","messageToAdd","value","newMessage","update","$ewOWp","logOut"],"version":3,"file":"forumShows.f0ffc0be.js.map"}